@{
    ViewData["Title"] = "DashBoard";
    Layout = "~/Views/Shared/ShopManagerSideBarLayout.cshtml";
    var currentMonth = DateTime.Now.ToString("MMMM");  // Get the full name of the current month
}
<style id="ShopDashBoard">
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
    }


    .content {
        width: 100%;
        max-width: 1200px; /* Adjust as needed */
        margin: 0 auto;
        padding: 20px;
        overflow-y: auto; /* Ensures scrolling within the content if it overflows */
    }

    .card-container {
        display: flex;
        gap: 20px;
    }

    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        width: 250px;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: left;
        position: relative;
    }

    .card-content {
        display: flex;
        align-items: center;
        gap: 15px; /* Space between icon and text */
    }

    .icon {
        font-size: 36px;
        padding: 10px;
        border-radius: 50%;
        display: inline-block;
    }

    .icon-yellow {
        background-color: #fceecf;
        color: #f4b400;
    }

    .icon-green {
        background-color: #d8f3dc;
        color: #52b788;
    }

    .icon-orange {
        background-color: #ffedd5;
        color: #fb923c;
    }

    .icon-blue {
        background-color: #e0f7fa;
        color: #00796b;
    }

    .text-container {
        display: flex;
        flex-direction: column;
    }

    .count {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    .label {
        font-size: 14px;
        color: #666;
    }

    .divider {
        margin: 10px 0;
        height: 1px;
        background-color: #e0e0e0;
    }

    .update {
        font-size: 14px;
        color: #888;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .update-icon {
        font-size: 16px;
    }
</style>

<style id="chart">
    /* Add some basic styling */
    .chart-container {
        width: 80%;
        margin: auto;
    }

    .month-selector {
        margin: 20px auto;
        display: flex;
        justify-content: center;
    }
</style>
<link rel="stylesheet" href="https://cdn.datatables.net/2.1.8/css/dataTables.dataTables.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>
<style>
    .row-img {
        width: 80px;
        height: 80px;
    }
</style>
<div class="content m-4 pb-3" id="ShopDashBoard">
    <div class="row p-4">
        <div class="col-12">
            <div class="card-container" >
                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-yellow">📦</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.TotalProduct</div>
                            <div class="label">Totat Product</div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-green">📥</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.StockProduct</div>
                            <div class="label">Stock Prduct</div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-orange">🛒</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.SaleProducts</div>
                            <div class="label">Sale Product</div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-blue">📅</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.ActiveDays</div>
                            <div class="label">Active Days</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-container" style="margin-top: 20px" id="ShopDashBoard">
                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-yellow">📂</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.Category</div>
                            <div class="label">Totat Category</div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-green">📈</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.Order</div>
                            <div class="label">Total Order</div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-content">
                        <div class="icon icon-orange">👥</div>
                        <div class="text-container">
                            <div class="count">@ViewBag.Users</div>
                            <div class="label">Total Customer</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="container">
                <div class="row">
                    <div class="col-6">
                    <div class="date-selector">
                            <h3 style="text-align: center; font-weight: bold; margin: 20px">Sale Product</h3>
                        <label>Start Date:</label>
                        <input type="date" id="startDate" onchange="updateBarChart()">
                        <label>End Date:</label>
                        <input type="date" id="endDate" onchange="updateBarChart()">
                    </div>

                    <div id="barChartContainer" style="width: 100%; margin: auto;">
                        <canvas id="productBarChart"></canvas>
                    </div>
                    </div>
                    <div class="col-6" style="margin-top: 50px">
                        <h3 style ="text-align: center; font-weight: bold; margin: 20px">Total Product in Category</h3>
                        <div id="categoryChartContainer" style="width: 100%; margin: auto;">
                            <canvas id="categoryBarChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            

            <h2 style="text-align: center; font-weight: bold; margin: 20px">Monthly static</h2>

            <div id = "chart" class="month-selector" >
                <label style="display: block; text-align: center;" for="monthDropdown">Select Month:</label>
                <select id="monthDropdown" onchange="updateChart()">
                    <option value="January">January</option>
                    <option value="February">February</option>
                    <option value="March">March</option>
                    <option value="April">April</option>
                    <option value="May">May</option>
                    <option value="June">June</option>
                    <option value="July">July</option>
                    <option value="August">August</option>
                    <option value="September">September</option>
                    <option value="October">October</option>
                    <option value="November">November</option>
                    <option value="December">December</option>
                </select>
            </div>

            <!-- Chart container -->
            <div id="chart" class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>
            
            <div>
                <table id="myTable" class="display">
                    <thead>
                        <tr>
                            <th>Days</th>
                            <th>Sale</th>
                            <th>Transaction Fee</th>
                            <th>Average Order</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- Rows will be populated by JavaScript -->
                    </tbody>
                </table>
            </div>

             
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script>
    let salesChart; // Ensure this is globally scoped

function initChart(labels, sales, others, averages) {
    const ctx = document.getElementById('salesChart').getContext('2d');

    // Destroy existing chart before creating a new one
    if (salesChart !== undefined && salesChart !== null) {
        salesChart.destroy();
    }

    salesChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [
                {
                    label: 'Revenue Sales',
                    data: sales,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                },
                {
                    label: 'Transaction Fee',
                    data: others,
                    borderColor: 'rgba(255, 99, 132, 1)',
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                },
                {
                    label: 'Revenue Order',
                    data: averages,
                    borderColor: 'rgba(54, 162, 235, 1)',
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    title: { display: true, text: 'Values' }
                },
                x: {
                    title: { display: true, text: 'Days' }
                }
            }
        }
    });
}


    function updateChart() {
        const monthName = document.getElementById('monthDropdown').value;
        fetch(`/ShopDashBoard/LoadChartData?monthName=${monthName}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error('Error:', data.error);
                    alert(data.error);
                    return;
                }

                const { labels, sales, others, averages } = data;

                const tableBody = document.getElementById('tableBody');
                tableBody.innerHTML = '';

                labels.forEach((label, i) => {
                    const row = `<tr>
                            <td>${label}</td>
                            <td>${sales[i]}</td>
                            <td>${others[i]}</td>
                            <td>${averages[i]}</td>
                        </tr>`;
                    tableBody.innerHTML += row;
                });

                initChart(labels, sales, others, averages);
            })
            .catch(error => console.error('Error loading chart data:', error));
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('monthDropdown').value = "@currentMonth";
        updateChart();
    });
   
</script>

<script>
    let productBarChart; // Globally scoped chart instance

    // Function to initialize the bar chart
    function initBarChart(labels, dataSets) {
        const ctx = document.getElementById('productPieChart').getContext('2d');

        // Destroy existing chart before creating a new one
        if (productBarChart !== undefined && productBarChart !== null) {
            productBarChart.destroy();
        }

        productBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: dataSets
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    title: {
                        display: true,
                        text: 'Product Sales and Daily Order Counts'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Quantity / Count'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Days'
                        }
                    }
                }
            }
        });
    }

    // Function to update the chart with new data
    function updateBarChart() {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        if (!startDate || !endDate) {
            alert("Please select both start and end dates.");
            return;
        }

        fetch(`/ShopDashBoard/LoadProductDataFromDay?startTime=${startDate}&endTime=${endDate}`)
            .then(response => response.json())
            .then(data => {
                if (!data || !Array.isArray(data.productNames) || !Array.isArray(data.productQuantities)) {
                    console.error('Invalid data format:', data);
                    alert('Unexpected data format received. Please try again.');
                    return;
                }

                if (data.productNames.length === 0 || data.productQuantities.length === 0) {
                    alert('No data available for the selected date range.');
                    return;
                }

                const ctx = document.getElementById('productBarChart').getContext('2d');

                // Destroy the existing chart instance if it exists and is a Chart
                if (window.productBarChart instanceof Chart) {
                    window.productBarChart.destroy();
                }

                // Create a new bar chart
                window.productBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.productNames,
                        datasets: [{
                            label: 'Product Quantities',
                            data: data.productQuantities,
                            backgroundColor: [
                                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
                                '#FF9F40', '#FF6384', '#36A2EB', '#FFCE56'
                            ],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Error loading product data for the bar chart:', error);
                alert('Failed to load data. Please try again later.');
            });

        fetch('/ShopDashBoard/LoadProductInCate')
            .then(response => response.json())
            .then(data => {
                if (!data || !Array.isArray(data.category) || !Array.isArray(data.number)) {
                    console.error('Invalid data format:', data);
                    alert('Unexpected data format received. Please try again.');
                    return;
                }

                const ctxCate = document.getElementById('categoryBarChart').getContext('2d');

                // Destroy any existing category chart instance if it exists
                if (categoryBarChart instanceof Chart) {
                    categoryBarChart.destroy();
                }

                // Create a new category product count bar chart
                categoryBarChart = new Chart(ctxCate, {
                    type: 'bar',
                    data: {
                        labels: data.category,  // Category names
                        datasets: [{
                            label: 'Number of Products in Category',
                            data: data.number,  // Number of products per category
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(255, 159, 64, 0.2)',
                                'rgba(255, 205, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(201, 203, 207, 0.2)'
                            ],
                            borderColor: [
                                'rgb(255, 99, 132)',
                                'rgb(255, 159, 64)',
                                'rgb(255, 205, 86)',
                                'rgb(75, 192, 192)',
                                'rgb(54, 162, 235)',
                                'rgb(153, 102, 255)',
                                'rgb(201, 203, 207)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: 'Categories'
                                }
                            },
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Products'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Error loading category data for the bar chart:', error);
                alert('Failed to load category data. Please try again later.');
            });
    }

    // Initial load of both charts when the page is loaded
    window.onload = updateBarChart;

    // Ensure the chart loads with the current month's start and end dates on page load
    document.addEventListener('DOMContentLoaded', () => {
        const currentDate = new Date();
        const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).toISOString().split('T')[0];
        const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).toISOString().split('T')[0];

        document.getElementById('startDate').value = startOfMonth;
        document.getElementById('endDate').value = endOfMonth;

        updateBarChart();
    });
</script>

<script>

    $(document).ready(function () {
        $('#myTable').DataTable({
            paging: false,
            layout: false
        });
    });
</script>
