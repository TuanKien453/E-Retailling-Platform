@model X.PagedList.IPagedList<E_Retalling_Portal.Models.GHNResponseModel.OrderInfoResponse>
@{
    ViewData["Title"] = "Order List";
}
<link href="~/css/OrderList.css" rel="stylesheet">

<div class="modal fade" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="feedbackModalLabel">Feedback</h5>
                <button type="button" stype="background: none;
                                             border: none;
                                             font-size: 30px;
                                             color: #f44336;
                                             opacity: 0.8;
                                             cursor: pointer;
                                             transition: opacity 0.3s ease, transform 0.2s ease;" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/Feedback/FeedbackProcess">
                    <div class="form-group">
                        <label for="comment">Your Comment:</label>
                        <textarea id="comment" name="comment" class="form-control" rows="3" style="width:100%" maxlength="200" required></textarea>
                    </div>

                    <input type="hidden" id="orderItemId" name="orderItemId" />

                    <div class="form-group">
                        <label>Rating:</label>
                        <div class="rating">
                            <input type="radio" id="star5" name="star" value="5" required />
                            <label for="star5" title="5 stars">&#9733;</label>
                            <input type="radio" id="star4" name="star" value="4" />
                            <label for="star4" title="4 stars">&#9733;</label>
                            <input type="radio" id="star3" name="star" value="3" />
                            <label for="star3" title="3 stars">&#9733;</label>
                            <input type="radio" id="star2" name="star" value="2" />
                            <label for="star2" title="2 stars">&#9733;</label>
                            <input type="radio" id="star1" name="star" value="1" />
                            <label for="star1" title="1 star">&#9733;</label>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit Feedback</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .rating {
            direction: rtl;
            display: inline-block;
            font-size: 40px;
            color: #FFD700;
        }

            .rating input {
                display: none;
            }

            .rating label {
                cursor: pointer;
                font-size: 40px;
            }

                .rating label:hover,
                .rating label:hover ~ label {
                    color: #FFD700;
                }

            .rating input:checked ~ label {
                color: #FFD700;
            }

        textarea {
            resize: none;
            font-size: 14px;
        }
    </style>
}
<div class="container">
    <!-- Tabs -->
    <div class="tabs">
        <div class="tab active" data-status="all">All</div>
        <div class="tab" data-status="ready_to_pick">Ready To Pick</div>
        <div class="tab" data-status="picking">Picking</div>
        <div class="tab" data-status="picked">Picked</div>
        <div class="tab" data-status="delivering">Delivering</div>
        <div class="tab" data-status="delivered">Delivered</div>
    </div>

    <input type="text" class="search-bar" placeholder="Search order...">

    <div class="order-list">
        @foreach (var item in ViewBag.OrderList)
        {
            string displayStatus = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(@item.Status.Replace("_", " "));
            var isProductItemNull = item.ProductItemId == null;
            var productImage = isProductItemNull ? item.Product.coverImage.imageName : item.ProductItem.image.imageName;
            var productName = isProductItemNull ? item.Product.name : $"{item.Product.name} - {item.ProductItem.attribute}";
            var price = isProductItemNull ? item.Product.price : item.ProductItem.price;
            var totalPrice = (price ?? 0) * (item.Quantity ?? 0);
            var orderItemId = item.ItemId;
            var orderStatus = item.Status;
            var orderItem = item.OrderItem;

            <div class="order-card" data-status="@orderStatus">
                <div class="order-header">
                    <div class="shop-name">@item.Product.shop.name</div>
                    <div class="shop-actions">
                        @if (displayStatus == "Delivered")
                        {
                            <button type="button" style="background:deepskyblue" data-toggle="modal" data-target="#feedbackModal" data-order-item-id="@orderItemId">
                                @(orderItem.rating != null || orderItem.comment != null ? "Update Review" : "Review")
                            </button>

                        }
                        <a href="/Home/ViewShop?id=@item.Product.shop.id">
                            <button>View Shop</button>
                        </a>
                        <button type="button"
                                data-bs-toggle="modal"
                                data-bs-target="#viewOrderDetail"
                                data-item='{
                                    "productName": "@productName",
                                    "quantity": "@item.Quantity",
                                    "price": "@item.Price",
                                    "shippingFee": "@item.ShippingFee",
                                    "status": "@item.Status",
                                    "productPrice": "@price"
                            }'>
                            View Order Detail
                        </button>
                    </div>
                </div>
                <div class="order-content">
                    <img src="~/productImages/@productImage" alt="Product Image">
                    <div class="order-details">
                        <p>@productName</p>
                        <p>Quantity: <span>@item.Quantity items</span></p>
                        <p>
                            Product Price(<span>@item.Quantity items</span>):
                            @if (totalPrice != item.Price)
                            {
                                <span style="text-decoration: line-through; color: #999;">
                                    <span>@totalPrice VND</span>
                                </span>
                            }
                            <span style="color: #e84118;">@item.Price VND</span>
                        </p>
                        <p>
                            Shipping Fee: @item.ShippingFee VND
                        </p>
                        <p>
                            Created At : @item.CreateDate
                        </p>
                        @if (item.FinishDate != null)
                        {
                            <p>Finish At: @item.FinishDate</p>
                        }
                        <div class="tab" data-status="@item.Status"><span>Status: @displayStatus</span></div>
                    </div>
                </div>
                <div class="order-footer">
                    <div class="total-price">Total price: @(item.Price + item.ShippingFee)VND</div>
                    <div class="actions">
                        <a href="/ViewProductDetail?area=Home&productId=@item.Product.id">
                            <button>Buy again</button>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="pagination-controls">
        @Html.PagedListPager((IPagedList)ViewBag.OrderList, page =>
                 Url.Action("ViewOrderList", new { page, status = ViewBag.CurrentStatus, pageSize = ViewBag.PageSize }),
                 new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
            MaximumPageNumbersToDisplay = 10,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always
        }
                 )

    </div>
</div>
<div class="modal fade" id="viewOrderDetail" tabindex="-1" aria-labelledby="viewOrderDetailLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewOrderDetailLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Product Name:</strong> <span id="modalProductName"></span></p>
                <p><strong>Quantity:</strong> <span id="modalQuantity"></span> items</p>
                <p><strong>Status:</strong> <span id="modalStatus"></span></p>
                <p><strong>Total Product Price:</strong> <span id="modalProductPrice"></span> VND</p>
                <p><strong>Discount Price:</strong> -<span id="modalDiscountPrice"></span> VND</p>
                <p><strong>Shipping Fee:</strong> <span id="modalShippingFee"></span> VND</p>
                <p><strong>Total Price:</strong> <span id="modalTotalPrice"></span> VND</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    const tabs = document.querySelectorAll('.tab');
    const orderCards = document.querySelectorAll('.order-card');

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');

            const status = tab.getAttribute('data-status');
                const pageSize = 1;

            orderCards.forEach(card => {
                if (status === 'all' || card.getAttribute('data-status') === status) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
                 window.location.href = `/Order/ViewOrderList?page=1&status=${status}&pageSize=${pageSize}`;
            });
        });
    });

    document.querySelector('.search-bar').addEventListener('input', function () {
        const searchTerm = this.value.toLowerCase();
        orderCards.forEach(card => {
            const productName = card.querySelector('.order-details p').textContent.toLowerCase();
            if (productName.includes(searchTerm)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    });

    document.querySelectorAll('[data-bs-target="#viewOrderDetail"]').forEach(button => {
        button.addEventListener('click', () => {
            const item = JSON.parse(button.getAttribute('data-item'));
            const totalProductPrice = (parseFloat(item.productPrice) * parseFloat(item.quantity)).toFixed(2);
            const discountPrice = (parseFloat(totalProductPrice) - parseFloat(item.price)).toFixed(2);
            document.getElementById('modalProductName').textContent = item.productName;
            document.getElementById('modalQuantity').textContent = item.quantity;
            document.getElementById('modalShippingFee').textContent = item.shippingFee;
            document.getElementById('modalDiscountPrice').textContent = discountPrice;
            document.getElementById('modalProductPrice').textContent = totalProductPrice;

            const totalPrice = (parseFloat(item.price) + parseFloat(item.shippingFee)).toFixed(2);
            document.getElementById('modalTotalPrice').textContent = totalPrice;
            document.getElementById('modalStatus').textContent = item.status;
        });
    });

    $('#feedbackModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Button that triggered the modal
        var orderItemId = parseInt(button.data('order-item-id'), 10); // Convert to integer
        var modal = $(this);
        modal.find('.modal-body #orderItemId').val(orderItemId); // Set the orderItemId in the hidden input
    });


</script>

