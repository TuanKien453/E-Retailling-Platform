@model X.PagedList.IPagedList<Category>
@{
    ViewData["Title"] = "ViewCategory";
    Layout = "~/Views/Shared/ManagerSideBarLayout.cshtml";
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Delete <span id="delete-text" class="text-danger"></span> and all its child
            </div>
            <form action="Category/DeleteCategory">
                <input type="hidden" name="id" value="" id="delete-category-id" />
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger">Delete</button>
            </div>
            </form>
        </div>
    </div>
</div>


<div class="content m-4 pb-3">
    <div class="container pt-5">
        <div class="row">
            <div class="col-4">
                <h3>Create category</h3>
                <form action="Category/add" method="post">
                    <div class="mb-3 mt-5 col-10">
                        <input asp-for="@Model.FirstOrDefault().name" class="form-control" type="text" name="name" value="" placeholder="name" />
                        <span asp-validation-for="@Model.FirstOrDefault(new Category{}).name" class="text-danger mt-2"></span>
                    </div>
                    <div class="col-10">
                        <select class="form-select form-control" aria-label="Default select example" name="parentCategoryId">
                            <option selected value="0">None</option>
                            @foreach (var item in ViewBag.categoies)
                            {
                                <option value="@item.id">@item.name</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-success mt-3">Add</button>
                    </div>
                    
                </form>

            </div>
            <div class="col-8">
                <h3>Categories</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Index</th>
                            <th>
                                Name
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 1;
                        }
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-secondary">
                                    @i
                                    @{
                                        i += 1;
                                    }
                                </td>
                                <td>
                                    <p id="catename-@item.id" onclick="toggleInput('@item.id')" class="clickable item text-xs">
                                        @item.name
                                        <span class="edit-hint">Click to edit</span>
                                    </p>
                                    <form action="Category/UpdateCategory">
                                        <input type="hidden" value="@item.id" name="id" />
                                        <input onkeypress="submitOnEnter(event)"  type="text" name="name" id="input-@item.id" value="@item.name" style="display:none;" class="form form-control-sm" />
                                        <input type="hidden" value="@item.parentCategoryId" name="parentCategoryId"/>
                                    </form>
                                    
                                </td>
                                <td>
                                    <a href="#" class="text-danger font-weight-bold text-xs" data-bs-toggle="modal" data-bs-target="#exampleModal" onclick="sendDataToModal(@item.id,'@item.name')">
                                        Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
                {
               DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
               DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
               MaximumPageNumbersToDisplay = 8,
               DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
               DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,

                }
                
                )
            </div>
        </div>

    </div>
</div>

<script>
    function sendDataToModal(categoryId,text) {
        var hiddenInput = document.querySelector('#delete-category-id');
        var deleteText = document.querySelector('#delete-text');
        deleteText.innerText = text;
        hiddenInput.value = categoryId;
    }

    //reset all input when click screen
    document.addEventListener('click', function (event) {
        var isClickInside = document.getElementById('catename-' + event.target.id.split('-')[1]);
        if (!isClickInside) {
            resetAll();
        }
    });

    function toggleInput(itemId) {
        resetAll();

        var input = document.getElementById('input-' + itemId);
        var p = document.getElementById('catename-' + itemId);

        var originalValue = input.value;
        var newValue = originalValue.replace(/-/g, '');
        input.value = newValue;

        input.style.display = 'inline';
        p.style.display = 'none';

    }

    function resetAll() {
        var forms = document.querySelectorAll('.form');

        forms.forEach(function (form) {
            form.style.display = 'none';
        });

        var items = document.querySelectorAll('.item');

        items.forEach(function (item) {
            item.style.display = 'inline';
        });
    }

    function submitOnEnter(event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            event.target.closest('form').submit();
        }
    }
</script>
